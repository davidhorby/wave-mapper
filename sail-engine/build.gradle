plugins {
    alias libs.plugins.shadowJar
}

configurations {
    invoker
}


shadowJar {
    archiveBaseName.set(project.name)
    archiveClassifier.set(null)
    archiveVersion.set(null)
    mergeServiceFiles()
}


jar {
    manifest {
        attributes 'Main-Class': 'com.dhorby.gcloud.GameEngine'
    }
}


dependencies {

    implementation project(":domain")
    implementation project(":shared")

    implementation libs.bundles.kotlin
    implementation libs.bundles.googleCloud
    implementation libs.bundles.jackson

    invoker 'com.google.cloud.functions.invoker:java-function-invoker:1.1.1'

    testImplementation(testFixtures(project(":shared")))
    testImplementation project( path: ":domain", configuration: "testArtifact")

    testImplementation libs.bundles.test
    testRuntimeOnly libs.bundles.testRuntime

}

tasks.register("runFunction", JavaExec) {
    main = 'com.google.cloud.functions.invoker.runner.Invoker'
    classpath(configurations.invoker)
    inputs.files(configurations.runtimeClasspath, sourceSets.main.output)
    args(
            '--target', project.findProperty('run.functionTarget'),
            '--port', project.findProperty('run.port') ?: 8080
    )
    doFirst {
        args('--classpath', files(configurations.runtimeClasspath, sourceSets.main.output).asPath)
    }
}
