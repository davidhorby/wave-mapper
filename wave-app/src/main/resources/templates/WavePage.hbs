<html title="Wave Mapper">
<head>
    <script src="https://www.gstatic.com/charts/loader.js"></script>
    <script>
        // Google Charts setup
        google.charts.load('current', {
            packages: ['corechart', 'map', 'geochart', 'table'],
            mapsApiKey: "{{mapsApiKey}}",
            callback: drawMap
        });

        // Icon URLs
        const icons = {
            verybig: { url: 'https://icons.iconarchive.com/icons/iconsmind/outline/72/Wave-icon.png' },
            big: { url: 'https://icons.iconarchive.com/iconsmind/outline/64/Wave-icon.png' },
            medium: { url: 'https://icons.iconarchive.com/iconsmind/outline/48/Wave-icon.png' },
            small: { url: 'https://icons.iconarchive.com/iconsmind/outline/32/Wave-icon.png' },
            verysmall: { url: 'https://icons.iconarchive.com/iconsmind/outline/24/Wave-icon.png' },
            shark: { url: 'https://icons.iconarchive.com/icons/martin-berube/animal/32/shark-icon.png' },
            boat: { url: 'https://icons.iconarchive.com/icons/aha-soft/transport/32/sailing-ship-icon.png' },
            pirate: { url: 'https://icons.iconarchive.com/icons/pixelpress/pirates/48/Pirate-Ship-icon.png' },
            notavailable: { url: 'https://icons.iconarchive.com/icons/webiconset/blogging/16/Not-Available-for-Work-icon.png' },
            start: { url: 'https://icons.iconarchive.com/icons/custom-icon-design/pretty-office-8/24/Flag-yellow-icon.png' },
            finish: { url: 'https://icons.iconarchive.com/icons/icons8/windows-8/48/Sports-Finish-Flag-icon.png' }
        };

        const mapOptions = {
            zoomLevel: 3,
            showTooltip: true,
            showInfoWindow: true,
            useMapTypeControl: true,
            showLine: true,
            icons: Object.fromEntries(Object.entries(icons).map(([k, v]) => [k, { normal: v.url, selected: v.url }]))
        };

        function drawChart() {
            const data = google.visualization.arrayToDataTable([{{{waveData}}}]);
            const options = {
                title: 'sumVar2 (%)',
                curveType: 'function',
                legend: { position: 'bottom' },
                vAxis: { title: 'someVar2 %' },
                hAxis: { title: 'someVar1' }
            };
            new google.visualization.LineChart(document.getElementById('chart_div')).draw(data, options);
        }

        function reDrawMap(dataArray) {
            const data = google.visualization.arrayToDataTable(dataArray);
            const map = new google.visualization.Map(document.getElementById('map_div'));
            map.draw(data, mapOptions);

            const table = new google.visualization.Table(document.getElementById('table_div'));
            table.draw(data, { showRowNumber: false, width: '100%', height: '100%' });

            google.visualization.events.addListener(map, 'select', () => {
                table.setSelection(map.getSelection());
            });
        }

        function drawMap() {
            reDrawMap([{{{waveData}}}]);
        }

        function updateLog(message) {
            const logBox = document.getElementById("log-text");
            logBox.value += `\n${message}`;
            console.log(message);
            logBox.scrollTop = logBox.scrollHeight;
        }

        // WebSocket setup
        const ping_interval = 12000;
        let interval, counterVal = 0;
        let actionWebsocket, messageWebsocket, postWebsocket;

        function setupWebsockets() {
            actionWebsocket = new WebSocket(`ws://{{hostname}}:{{port}}/action`);
            actionWebsocket.onerror = e => console.log('Action WS error', e);
            actionWebsocket.onclose = () => setTimeout(setupWebsockets, 1000);

            messageWebsocket = new WebSocket(`ws://{{hostname}}:{{port}}/message`);
            messageWebsocket.onopen = () => {
                messageWebsocket.send(JSON.stringify({ ping: ++counterVal }));
                interval = setInterval(() => {
                    messageWebsocket.send(JSON.stringify({ message: "hello", counter: ++counterVal }));
                }, ping_interval);
            };
            messageWebsocket.onmessage = event => {
                try {
                    const obj = JSON.parse(event.data.replace(/\\"/g, '"'));
                    if (obj.message !== undefined) updateLog(obj.message);
                    else reDrawMap(obj);
                } catch (e) { updateLog(e.message); }
            };
            messageWebsocket.onclose = () => setTimeout(setupWebsockets, 1000);

            postWebsocket = new WebSocket(`ws://{{hostname}}:{{port}}/post`);
            postWebsocket.onerror = e => console.log('Post WS error', e);
            postWebsocket.onclose = () => setTimeout(setupWebsockets, 1000);
        }
        setupWebsockets();

        function sendMessage(action) {
            actionWebsocket.send(JSON.stringify({ counter: counterVal, action }));
        }

        function sendPostMessage(action) {
            postWebsocket.send(action);
        }

        function addPiece() {
            const name = document.getElementsByName('name')[0].value;
            const pieceType = document.getElementsByName('pieceType')[0].value;
            const lat = document.getElementsByName('lat')[0].value;
            const lon = document.getElementsByName('lon')[0].value;
            const myJSON = JSON.stringify({ name, pieceType, lat, lon });
            console.log(`the name is ${myJSON}`);
            sendPostMessage(myJSON);
        }
    </script>
    <style>
        table, th, td { border: 1px solid black; }
        textarea { resize: none; }
        textarea.ta10em { height: 10em; }
    </style>
</head>
<body>
<table align="center" width="100%" height="100%">
    <tr valign="top">
        <td style="width: 50%;"><div id="map_div" style="width: 100%; height: 100%;"></div></td>
        <td>
            <table style="width: 100%; height: 500px">
                <tr><td colspan="4"><div id="table_div" style="height:300px;"></div></td></tr>
                <tr>
                    <td>
                        <div id="action_form">
                            <table>
                                <tr>
                                    <td>Name</td>
                                    <td><input type="text" name="name" required></td>
                                    <td>Type</td>
                                    <td>
                                        <select name="pieceType">
                                            <option value="BOAT">Boat</option>
                                            <option value="SHARK">Shark</option>
                                            <option value="PIRATE">Pirate</option>
                                            <option value="START">Start</option>
                                            <option value="FINISH">Finish</option>
                                        </select>
                                    </td>
                                </tr>
                                <tr>
                                    <td>Lat</td>
                                    <td><input type="text" name="lat" required></td>
                                    <td>Lon</td>
                                    <td><input type="text" name="lon" required></td>
                                </tr>
                            </table>
                            <button onclick="addPiece()">Add Piece</button>
                        </div>
                    </td>
                    <td colspan="3">
                        <table>
                            <tr><td>Admin</td></tr>
                            <tr>
                                <td><button onclick="sendMessage('start')">Start</button></td>
                                <td><button onclick="sendMessage('move')">Move</button></td>
                                <td><button onclick="sendMessage('clear')">Clear</button></td>
                                <td><button onclick="sendMessage('reset')">Reset</button></td>
                                <td><button onclick="sendMessage('refresh')">Refresh</button></td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td>Players</td>
                    <td>Distance to finish (km)</td>
                    <td>Distance from pirates (km)</td>
                    <td>Distance from sharks (km)</td>
                    <td colspan="4"><textarea class="ta10em" id="log-text"></textarea></td>
                </tr>
                {{#each players}}
                    <tr>
                        <td>{{pieceLocation.name}}</td>
                        <td>{{distanceToFinish}}</td>
                        <td>
                            {{#each distanceFromPirates}}
                                <table width="100%">
                                    <tr style="background-color: {{alertLevel}}">
                                        <td>{{name}}</td><td>{{distance}}</td>
                                    </tr>
                                </table>
                            {{/each}}
                        </td>
                        <td>
                            {{#each distanceFromSharks}}
                                <table width="100%">
                                    <tr style="background-color: {{alertLevel}}">
                                        <td>{{name}}</td><td>{{distance}}</td>
                                    </tr>
                                </table>
                            {{/each}}
                        </td>
                    </tr>
                {{/each}}
            </table>
        </td>
    </tr>
    <tr>
        <td><div id="chart_div" style="width: 100%; height: 50%;"></div></td>
    </tr>
</table>
</body>
</html>
